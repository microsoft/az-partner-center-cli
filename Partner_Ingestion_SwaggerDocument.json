{
  "openapi"          : "3.0.1",
  "info"             : {
    "title"  : "https://api.partner.microsoft.com/v1.0/ingestion",
    "version": "1.0"
  },
  "servers"          : [
    {
      "url": "https://api.partner.microsoft.com/v1.0/ingestion"
    }
  ],
  "paths"            : {
    "/products"                                                                           : {
      "get" : {
        "operationId": "list",
        "tags"       : [
          "Product"
        ],
        "summary"    : "Returns collection of products.",
        "description": "Sample requests:\r\n\r\n    GET /products?$filter=ResourceType eq 'Application' or ResourceType eq 'SoftwareAsAService' \r\n    GET /products?$filter=ExternalIDs/Any(i:i/Type eq 'StoreID' and i/Value eq '{storeID}')\r\n    GET /products?$filter=ExternalIDs/Any(i:i/Type eq 'ExternalAzureProductID' and i/Value eq '{externalAzureProductID}')",
        "parameters" : [
          {
            "name"       : "$filter",
            "in"         : "query",
            "description": "Filter for paged collection. Filter by ResourceType or ExternalIDs with operation eq is allowed.",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "name"       : "$skipToken",
            "in"         : "query",
            "description": "Skip token for paged collection",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Products.BaseProduct_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "operationId": "create",
        "tags"       : [
          "Product"
        ],
        "summary"    : "Creates a Product",
        "description": "Sample requests:\r\n            \r\n    POST /product\r\n                 {\r\n                     \"resourceType\": \"AzureThirdPartyVirtualMachine\",\r\n                     \"name\": \"testVm\",\r\n                     \"externalIDs\" : [\r\n                      {\r\n                         \"type\": \"AzureOfferID\",\r\n                         \"value\" : \"testOfferID\",\r\n                      }]\r\n                 }",
        "parameters" : [
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Products.BaseProduct",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProduct"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProduct"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}"                                                               : {
      "get"   : {
        "operationId": "get",
        "tags"       : [
          "Product"
        ],
        "summary"    : "Returns a product.",
        "description": "Sample requests:\r\n            \r\n    GET /products/{productID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProduct"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "operationId": "delete",
        "tags"       : [
          "Product"
        ],
        "summary"    : "Deletes a product",
        "description": "Sample requests:\r\n            \r\n    DELETE /products/{productID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "$ref": "#/components/responses/204"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/setup"                                                         : {
      "get" : {
        "tags"       : [
          "Product"
        ],
        "summary"    : "Returns ProductSetup of a Product.",
        "description": "Sample requests:\r\n            \r\n    GET /products/{productID}/setup",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProductSetup"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "Product"
        ],
        "summary"    : "Creates a ProductSetup [AzureProductSetup is allowed]",
        "description": "Sample requests:\r\n            \r\n    POST /product/{productID}/setup\r\n    {\r\n        \"resourceType\": \"AzureProductSetup\",\r\n        \"leadGenID\": \"testLeadGenID\"\r\n    }",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Products.BaseProductSetup",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProductSetup"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProductSetup"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/branches/getByModule(module={module})"                         : {
      "get": {
        "tags"       : [
          "Branches"
        ],
        "summary"    : "Returns a paged collection of Branch",
        "description": "Sample request:\r\n                 GET /products/{productID}/branches/getByModule(module=Listing)\r\n                     =&gt; returns all branches of Listing module",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "module",
            "in"         : "path",
            "description": "Module. Possible values: Listing, Package, Property, Availability",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of complete submission resource",
            "headers"    : {
              "Request-ID": {
                "$ref": "#/components/headers/Request-ID"
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Branches.Branch_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/productavailabilities"                                         : {
      "get" : {
        "tags"       : [
          "ProductAvailability"
        ],
        "summary"    : "Returns a paged collection of ProductAvailability resource for Product",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/productAvailabilities",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of ProductAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "ProductAvailability"
        ],
        "summary"    : "Create ProductAvailability resource for Product",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/productAvailabilities",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Returns ProductAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/productavailabilities/{productAvailabilityID}"                 : {
      "get": {
        "tags"       : [
          "ProductAvailability"
        ],
        "summary"    : "Returns ProductAvailability resource for Product",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/productAvailabilities/{productAvailabilityID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "productAvailabilityID",
            "in"         : "path",
            "description": "ID of ProductAvailability",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns ProductAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "ProductAvailability"
        ],
        "summary"    : "Update ProductAvailability resource for Product",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/productAvailabilities/{productAvailabilityID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "productAvailabilityID",
            "in"         : "path",
            "description": "ID of ProductAvailability",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns ProductAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/productAvailabilities/getByInstanceID(instanceID={instanceID})": {
      "get": {
        "tags"       : [
          "ProductAvailability"
        ],
        "summary"    : "Returns a paged collection of ProductAvailability resource for Product",
        "description": "Sample request:\r\n                 GET /products/{productID}/productAvailabilities/getByInstanceID(instanceID={instanceID})",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of ProductAvailability",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability_"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/properties"                                                    : {
      "get" : {
        "tags"       : [
          "Property"
        ],
        "summary"    : "Returns a paged collection of Property resources for a Product",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/properties",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of Property resources",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Properties.BaseProperty_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "Property"
        ],
        "summary"    : "Create a Property resource for a Product",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/properties [Body Property]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Properties.BaseProperty",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns Property resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/properties/{propertyID}"                                       : {
      "get": {
        "tags"       : [
          "Property"
        ],
        "summary"    : "Returns a Property resource for a Product",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/properties/{propertyID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "propertyID",
            "in"         : "path",
            "description": "ID of Property",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns Property resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "Property"
        ],
        "summary"    : "Update the Property resource for a Product",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/properties/{propertyID} [Body Property]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "propertyID",
            "in"         : "path",
            "description": "ID of Property",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Properties.BaseProperty",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns Property resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/properties/getByInstanceID(instanceID={instanceID})"           : {
      "get": {
        "tags"       : [
          "Property"
        ],
        "summary"    : "Returns a paged collection of Property resources for a Product",
        "description": "Sample request:\r\n                 GET /products/{productID}/properties/getByInstanceID(instanceID={instanceID})",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of a certain type of BaseProperty",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Properties.BaseProperty_"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}"                                          : {
      "get"   : {
        "tags"       : [
          "Listing"
        ],
        "summary"    : "Returns Listing resource",
        "description": "Sample request:\r\n                 GET /products/{productID}/listings/{listingID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns Azure Listing resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "Listing"
        ],
        "summary"    : "Updates Listing resource",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/listings/{listingID [Body Listing]\r\n",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.BaseListing",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns updated Listing resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "Listing"
        ],
        "summary"    : "Deletes Listing resource",
        "description": "Sample request:\r\n            \r\n    DELETE /products/{productID}/listings/{listingID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "description": "Deletes Listing resource"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/assets"                                   : {
      "get" : {
        "tags"       : [
          "ListingAsset"
        ],
        "summary"    : "Returns a paged collection of ListingAsset resources",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/assets\r\n            \r\n      =&gt; returns all ListingAsset resources for a given listingID",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of ListingAsset resources",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingAsset_"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "ListingAsset"
        ],
        "summary"    : "Creates a ListingAsset resource",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/listings/{listingID}/assets/{assetID} [Body ListingAsset]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingAsset",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Returns newly created ListingAsset resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/assets/{assetID}"                         : {
      "get"   : {
        "tags"       : [
          "ListingAsset"
        ],
        "summary"    : "Returns a ListingAsset resource",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/assets/{assetID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/assetID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a ListingAsset resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "ListingAsset"
        ],
        "summary"    : "Deletes a ListingAsset resource",
        "description": "Sample request:\r\n            \r\n    DELETE /products/{productID}/listings/{listingID}/assets/{assetID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/assetID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "$ref": "#/components/responses/204"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "ListingAsset"
        ],
        "summary"    : "Updates a ListingImage resource",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/listings/{listingID}/assets/{assetID} [Body ListingImage]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/assetID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingAsset",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns updated ListingAsset resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/images"                                   : {
      "get" : {
        "tags"       : [
          "ListingImage"
        ],
        "summary"    : "Returns a paged collection of ListingImage resources",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/images\r\n            \r\n      returns all ListingImage resources for a given listing\r\n            \r\n    ",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of ListingImage resources",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingImage_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "ListingImage"
        ],
        "summary"    : "Creates a ListingImage resource",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/listings/{listingID}/images [Body ListingImage]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingImage",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Returns newly created ListingImage resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/images/{imageID}"                         : {
      "get"   : {
        "tags"       : [
          "ListingImage"
        ],
        "summary"    : "Returns a ListingImage resource",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/images/{imageID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/imageID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a ListingImage resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "ListingImage"
        ],
        "summary"    : "Updates a ListingImage resource",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/listings/{listingID}/images/{imageID} [Body ListingImage]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/imageID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingImage",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns updated ListingImage resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "ListingImage"
        ],
        "summary"    : "Deletes a ListingImage resource",
        "description": "Sample request:\r\n            \r\n    DELETE /products/{productID}/listings/{listingID}/images/{imageID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/imageID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "$ref": "#/components/responses/204"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/videos"                                   : {
      "get" : {
        "tags"       : [
          "ListingVideo"
        ],
        "summary"    : "Returns a paged collection of ListingVideo resources",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/videos\r\n            \r\n      =&gt; returns ListingVideo resources for a given language",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of ListingVideo resources",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingVideo_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "ListingVideo"
        ],
        "summary"    : "Creates a ListingVideo resource",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/listings/{listingID}/videos   [Body ListingVideo]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingVideo",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Returns newly created ListingVideo resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/{listingID}/videos/{videoID}"                         : {
      "get"   : {
        "tags"       : [
          "ListingVideo"
        ],
        "summary"    : "Returns a ListingVideo resource",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/listings/{listingID}/videos/{videoID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "videoID",
            "in"         : "path",
            "description": "ID of Video",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=FileSasUri to Include SAS URI in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns ListingVideo resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "ListingVideo"
        ],
        "summary"    : "Updates a ListingVideo resource",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/listings/{listingID}/videos/{videoID} [Body ListingVideo]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "videoID",
            "in"         : "path",
            "description": "ID of ListingVideo",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Listings.ListingVideo",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns the updated ListingVideo resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "ListingVideo"
        ],
        "summary"    : "Deletes a ListingVideo resource",
        "description": "Sample request:\r\n            \r\n    DELETE /products/{productID}/listings/{listingID}/videos/{videoID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/listingID"
          },
          {
            "name"       : "videoID",
            "in"         : "path",
            "description": "ID of ListingVideo",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "$ref": "#/components/responses/204"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/getByInstanceID(instanceID={instanceID})"             : {
      "get": {
        "tags"       : [
          "Listing"
        ],
        "summary"    : "Returns a paged collection of Listing resources",
        "description": "Sample request:\r\n                 GET /products/{productID}/listings/getByInstanceID(instanceID={instanceID})",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of BaseListing resource",
            "headers"    : {
              "Request-ID": {
                "$ref": "#/components/headers/Request-ID"
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.BaseListing_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/listings/createWithInstanceID(instanceID={instanceID})"        : {
      "post": {
        "tags"       : [
          "Listing"
        ],
        "summary"    : "Creates a Listing resource",
        "description": "Sample request:\r\n                 POST /products/{productID}/listings/createWithInstanceID(instanceID={instanceID}) [Body Listing]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a base Listing",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "The created BaseListing resource",
            "headers"    : {
              "Request-ID": {
                "$ref": "#/components/headers/Request-ID"
              },
              "ETag"      : {
                "description": "ETag of returned resource",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/packageconfigurations/{packageConfigurationID}"                : {
      "get": {
        "tags"       : [
          "PackageConfiguration"
        ],
        "summary"    : "Returns a PackageConfiguration resource",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/packageConfigurations/{packageConfigurationID}\r\n",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "packageConfigurationID",
            "in"         : "path",
            "description": "PackageConfiguration ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a PackageConfiguration resource",
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                    }
                  ]
                },
                "examples": {
                  "Dynamics365BusinessCentralPackageConfiguration"            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                  },
                  "Dynamics365CustomerEngagementPackageConfiguration"         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                  },
                  "Dynamics365OperationsPackageConfiguration"                 : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                  },
                  "Dynamics365BusinessCentralTestDrivePackageConfiguration"   : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                  },
                  "Dynamics365CustomerEngagementTestDrivePackageConfiguration": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                  },
                  "Dynamics365OperationsTestDrivePackageConfiguration"        : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                  },
                  "AzureApplicationPackageConfiguration"                      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                  },
                  "AzureManagedApplicationPackageConfiguration"               : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                  },
                  "AzureSolutionTemplatePackageConfiguration"                 : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                  },
                  "AzureResourceManagerTestDrivePackageConfiguration"         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                  }
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "PackageConfiguration"
        ],
        "summary"    : "Updates a PackageConfiguration resource",
        "description": "Sample request:\r\n            \r\n    PUT /products/{productID}/packageConfigurations/{packageConfigurationID} [Body PackageConfiguration]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "packageConfigurationID",
            "in"         : "path",
            "description": "PackageConfiguration ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration",
          "content"    : {
            "application/json": {
              "schema"  : {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                  }
                ]
              },
              "examples": {
                "Dynamics365BusinessCentralPackageConfiguration"            : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                },
                "Dynamics365CustomerEngagementPackageConfiguration"         : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                },
                "Dynamics365OperationsPackageConfiguration"                 : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                },
                "Dynamics365BusinessCentralTestDrivePackageConfiguration"   : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                },
                "Dynamics365CustomerEngagementTestDrivePackageConfiguration": {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                },
                "Dynamics365OperationsTestDrivePackageConfiguration"        : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                },
                "AzureApplicationPackageConfiguration"                      : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                },
                "AzureManagedApplicationPackageConfiguration"               : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                },
                "AzureSolutionTemplatePackageConfiguration"                 : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                },
                "AzureResourceManagerTestDrivePackageConfiguration"         : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                }
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns updated PackageConfiguration resource",
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                    }
                  ]
                },
                "examples": {
                  "Dynamics365BusinessCentralPackageConfiguration"            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                  },
                  "Dynamics365CustomerEngagementPackageConfiguration"         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                  },
                  "Dynamics365OperationsPackageConfiguration"                 : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                  },
                  "Dynamics365BusinessCentralTestDrivePackageConfiguration"   : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                  },
                  "Dynamics365CustomerEngagementTestDrivePackageConfiguration": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                  },
                  "Dynamics365OperationsTestDrivePackageConfiguration"        : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                  },
                  "AzureApplicationPackageConfiguration"                      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                  },
                  "AzureManagedApplicationPackageConfiguration"               : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                  },
                  "AzureSolutionTemplatePackageConfiguration"                 : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                  },
                  "AzureResourceManagerTestDrivePackageConfiguration"         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                  }
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/packageConfigurations/getByInstanceID(instanceID={instanceID})": {
      "get": {
        "tags"       : [
          "PackageConfiguration"
        ],
        "summary"    : "Returns a paged collection of PackageConfiguration resource",
        "description": "Sample request:\r\n                 GET /products/{productID}/packageConfigurations/getByInstanceID(instanceID={instanceID})",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of certain type of BasePackageConfiguration resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_"
                    }
                  ]
                },
                "examples": {
                  "Dynamics365BusinessCentralPackageConfiguration"   : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365BusinessCentralPackageConfiguration"
                  },
                  "Dynamics365CustomerEngagementPackageConfiguration": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365CustomerEngagementPackageConfiguration"
                  },
                  "Dynamics365OperationsPackageConfiguration"        : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365OperationsPackageConfiguration"
                  }
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/packages"                                                      : {
      "get" : {
        "tags"       : [
          "Package"
        ],
        "summary"    : "Returns a set of package instances for the product.",
        "description": "Returns a set of package instances for the product.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackage_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "Package"
        ],
        "summary"    : "Create a package resource.",
        "description": "Sample request:\r\n            \r\n    POST products/{productID}/packages\r\n    {\r\n        \"resourceType\": \"package\",\r\n        \"fileName\": \"sample.appx\"\r\n    }",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Packages.BasePackage",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/packages/{packageID}"                                          : {
      "get"   : {
        "tags"       : [
          "Package"
        ],
        "summary"    : "Returns a package instance for the product.",
        "description": "Returns a package instance for the product.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"    : "packageID",
            "in"      : "path",
            "required": true,
            "schema"  : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "Package"
        ],
        "summary"    : "Update the package.",
        "description": "Update the package.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "packageID",
            "in"         : "path",
            "description": "The ID of package",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Packages.BasePackage",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Success",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "Package"
        ],
        "summary"    : "Delete the package.",
        "description": "Delete the package.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "packageID",
            "in"         : "path",
            "description": "the ID of package",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "$ref": "#/components/responses/204"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/variants"                                                      : {
      "get" : {
        "operationId": "list",
        "tags"       : [
          "Variant"
        ],
        "summary"    : "Returns a set of variants for the product.",
        "description": "Returns a set of variants for the product.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "$skipToken",
            "in"         : "query",
            "description": "Skip token for paged collection",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A paged collection of a certain type of BaseVariant resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema"  : {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_"
                },
                "examples": {
                  "AzureSkuVariant"      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_AzureSkuVariant"
                  },
                  "AzureTestDriveVariant": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_AzureTestDriveVariant"
                  }
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "operationId": "create",
        "tags"       : [
          "Variant"
        ],
        "summary"    : "Create a variant resource.",
        "description": "Sample request:\r\n                 POST products/{productID}/variants\r\n                 {\r\n                     \"resourceType\": \"AzureSkuVariant\",\r\n                     ...\r\n                 }",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Base Variant",
          "content"    : {
            "application/json": {
              "schema"  : {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                  }
                ]
              },
              "examples": {
                "AzureSkuVariant"      : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                },
                "AzureTestDriveVariant": {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                }
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "A type of BaseVariant resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              },
              "ETag"      : {
                "description": "ETag of returned resource",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                    }
                  ]
                },
                "examples": {
                  "AzureSkuVariant"      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                  },
                  "AzureTestDriveVariant": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                  }
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/variants/{variantID}"                                          : {
      "get"   : {
        "operationId": "get",
        "tags"       : [
          "Variant"
        ],
        "summary"    : "Returns a variant for the product.",
        "description": "Returns a variant for the product.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/variantID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A type of BaseVariant resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              },
              "ETag"      : {
                "description": "ETag of returned resource",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                    }
                  ]
                },
                "examples": {
                  "AzureSkuVariant"      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                  },
                  "AzureTestDriveVariant": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                  }
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "operationId": "set",
        "tags"       : [
          "Variant"
        ],
        "summary"    : "Update the variant.",
        "description": "Update the variant.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/variantID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a type of base variant",
          "content"    : {
            "application/json": {
              "schema"  : {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                  }
                ]
              },
              "examples": {
                "AzureSkuVariant"      : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                },
                "AzureTestDriveVariant": {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                }
              }
            }
          }
        },
        "responses"  : {
          "200": {
            "description": "A certain type of BaseVariant resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              },
              "ETag"      : {
                "description": "ETag of returned resource",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                    }
                  ]
                },
                "examples": {
                  "AzureSkuVariant"      : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                  },
                  "AzureTestDriveVariant": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete",
        "tags"       : [
          "Variant"
        ],
        "summary"    : "Delete the variant.",
        "description": "Delete the variant.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/variantID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "description": "Variant is deleted successfuly",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/featureAvailabilities/getByInstanceID(instanceID={instanceID})": {
      "get": {
        "tags"       : [
          "FeatureAvailability"
        ],
        "summary"    : "Returns a paged collection of feature availability resource",
        "description": "Sample request:\r\n                 GET /products/{productID}/featureAvailabilities/getByInstanceID(instanceID={instanceID})\r\n                 GET /products/{productID}/featureAvailabilities/getByInstanceID(instanceID={instanceID})&amp;$expand=MarketStates,PriceSchedule,Trial",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/FeatureAvailabilityExpand"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of feature availability resources",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/featureavailabilities/{featureAvailabilityID}"                 : {
      "get": {
        "tags"       : [
          "FeatureAvailability"
        ],
        "summary"    : "Returns a feature availability.",
        "description": "Sample request:\r\n                 GET products/{productID}/featureavailabilities/{featureAvailabilityID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/featureAvailabilityID"
          },
          {
            "$ref": "#/components/parameters/FeatureAvailabilityExpand"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns FeatureAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "FeatureAvailability"
        ],
        "summary"    : "Update a feature availability resouce",
        "description": "Sample request:\r\n                 PUT products/{productID}/featureavailabilities/{featureavailabilityID}\r\n                 {\r\n                     ...\r\n                 }",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/featureAvailabilityID"
          },
          {
            "$ref": "#/components/parameters/FeatureAvailabilityExpand"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns FeatureAvailability resource",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions"                                                   : {
      "get" : {
        "operationId": "list",
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Returns a paged collection of Submissions",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/submissions\r\n            \r\n        =&gt; returns both Inprogress and Published Submissions for Retail\r\n            \r\n    GET /products/{productID}/submissions?state={state}\r\n            \r\n        =&gt; returns the Submission (either Inprogress or Published) of requested state for Retail\r\n            \r\n    GET /products/{productID}/submissions?sandboxID={sandboxID}\r\n            \r\n        =&gt; returns both Inprogress and Published Submissions for requested Sandbox\r\n            \r\n    GET /products/{productID}/submissions?sandboxID={sandboxID}&amp;state={state}\r\n            \r\n        =&gt; returns the Submission (either Inprogress or Published) of requested state for requested Sandbox\r\n            \r\n    GET /products/{productID}/submissions?flightID={flightID}\r\n            \r\n        =&gt; returns both Inprogress and Published Submissions for requested Flight\r\n            \r\n    GET /products/{productID}/submissions?flightID={flightID}&amp;state={state}\r\n            \r\n        =&gt; returns the Submission (either Inprogress or Published) of requested state for requested Flight",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "$filter",
            "in"         : "query",
            "description": "Filter of submissions. Filter by State and/or Targets with operation eq is allowed.",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=PublishOption to Include publish option in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of Submissions",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.Submission_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "operationId": "create",
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Creates a new Submission",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/submissions\r\n    {\r\n        // empty Json body\r\n    }\r\n        =&gt; create Inprogress Submission for Retail\r\n            \r\n    POST /products/{productID}/submissions\r\n    {\r\n        \"sandboxID\":\"{sandboxID}\"\r\n    }\r\n        =&gt; create Inprogress Submission for a Sandbox\r\n            \r\n    POST /products/{productID}/submissions\r\n    {\r\n        \"flightID\":\"{flightID}\"\r\n    }\r\n        =&gt; create Inprogress Submission for a Flight",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.Submissions.SubmissionCreationRequest",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.SubmissionCreationRequest"
              }
            }
          }
        },
        "responses"  : {
          "201"    : {
            "description": "Returns the newly created Submission",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.Submission"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions/{submissionID}"                                    : {
      "get"   : {
        "operationId": "get",
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Returns a Submission",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/submissions/{submissionID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "name"       : "$expand",
            "in"         : "query",
            "description": "Use $expand=PublishOption to Include publish option in response",
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a Submission",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.Submission"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "operationId": "delete",
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Deletes a Submission",
        "description": "Sample request:\r\n            \r\n    DELETE /products/{productID}/submissions/{submissionID}",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "204"    : {
            "description": "Deletes a Submission (only inprogress Submission can be deleted)"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions/{submissionID}/promote"                            : {
      "post": {
        "operationId": "promote",
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Promote a Preview Submission to live",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/submissions/{submissionID}/promote\r\n    [empty body]",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns Submission workflow details of the submission that has been promoted to live.",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.WorkflowDetail"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions/{submissionID}/reports"                            : {
      "get": {
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Returns a collection of CertificationReport for a Submission",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/submissions/{submissionID}/reports",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns collection of Certification-Report",
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.CertificationReport_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions/{submissionID}/validations"                        : {
      "get": {
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Returns Validation for a Submission",
        "description": "Sample request:\r\n                 GET /products/{productID}/submissions/{submissionID}/validations",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A PagedCollection of ValidationItems",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.ValidationItem_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/submissions/{submissionID}/workflowdetails"                    : {
      "get": {
        "tags"       : [
          "Submission"
        ],
        "summary"    : "Returns workflow details for a Submission",
        "description": "Sample request:\r\n                 GET /products/{productID}/submissions/{submissionID}/workflowdetails",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/submissionID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "The submission workflow details resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.WorkflowDetail_"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/leadconfiguration"                                             : {
      "get" : {
        "tags"       : [
          "LeadConfiguration"
        ],
        "summary"    : "Returns the LeadConfiguration associated with the product",
        "description": "Sample request:\r\n            \r\n    GET /products/{productID}/leadconfiguration\r\n",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns the LeadConfiguration resource associated with the product",
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                    }
                  ]
                },
                "examples": {
                  "AzureBlobLeadConfiguration"                             : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                  },
                  "AzureTableLeadConfiguration"                            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                  },
                  "DynamicsCustomerRelationshipManagementLeadConfiguration": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                  },
                  "HttpsEndpointLeadConfiguration"                         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                  },
                  "MarketoLeadConfiguration"                               : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                  },
                  "SalesForceLeadConfiguration"                            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                  }
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "LeadConfiguration"
        ],
        "summary"    : "Creates a new LeadConfiguration associated with the product",
        "description": "Sample request:\r\n            \r\n    POST /products/{productID}/leadconfiguration\r\n",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "requestBody": {
          "description": "Request body of a Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration",
          "content"    : {
            "application/json": {
              "schema"  : {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                  },
                  {
                    "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                  }
                ]
              },
              "examples": {
                "AzureBlobLeadConfiguration"                             : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                },
                "AzureTableLeadConfiguration"                            : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                },
                "DynamicsCustomerRelationshipManagementLeadConfiguration": {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                },
                "HttpsEndpointLeadConfiguration"                         : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                },
                "MarketoLeadConfiguration"                               : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                },
                "SalesForceLeadConfiguration"                            : {
                  "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                }
              }
            }
          }
        },
        "responses"  : {
          "200": {
            "description": "Returns the newly created LeadConfiguration resource associated with the product",
            "content"    : {
              "application/json": {
                "schema"  : {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                    }
                  ]
                },
                "examples": {
                  "AzureBlobLeadConfiguration"                             : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"
                  },
                  "AzureTableLeadConfiguration"                            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"
                  },
                  "DynamicsCustomerRelationshipManagementLeadConfiguration": {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"
                  },
                  "HttpsEndpointLeadConfiguration"                         : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"
                  },
                  "MarketoLeadConfiguration"                               : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"
                  },
                  "SalesForceLeadConfiguration"                            : {
                    "$ref": "#/components/examples/Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{productID}/supplementalcontents/getByInstanceID(instanceID={instanceID})" : {
      "get": {
        "tags"       : [
          "SupplementalContent"
        ],
        "summary"    : "Returns a set of SupplementalContents for the product.",
        "description": "Returns a set of SupplementalContents for the product.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/instanceID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A paged collection of a certain type of SupplementalContent resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent_"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/supplementalContents/{instanceID}"                             : {
      "get": {
        "tags"       : [
          "SupplementalContent"
        ],
        "summary"    : "Returns a SupplementalContent.",
        "description": "Returns a SupplementalContent.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "ID of supplemental content instance",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A SupplementalContent resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"
                }
              }
            }
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "SupplementalContent"
        ],
        "summary"    : "Update a SupplementalContent.",
        "description": "Update a SupplementalContent.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "ID of supplemental content instance",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          },
          {
            "name"       : "If-Match",
            "in"         : "header",
            "description": "ETag of the resource to be matched",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a SupplementalContent",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "A SupplementalContent resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/supplementalContents/{instanceID}/commit"                      : {
      "post": {
        "tags"       : [
          "SupplementalContent"
        ],
        "summary"    : "Commit a SupplementalContent.",
        "description": "Commit a SupplementalContent.",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "ID of supplemental content instance",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Authorization"
          },
          {
            "$ref": "#/components/parameters/Client-Request-ID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "A SupplementalContent resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/cosellAssets"                                                  : {
      "get" : {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Returns a paged collection of CosellAsset resources for product",
        "description": "Returns a paged collection of CosellAsset resources for product",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of CosellAsset resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Cosell.CosellAsset_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Create a CosellAsset",
        "description": "Create a CosellAsset",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          }
        ],
        "requestBody": {
          "description": "Request body of a CosellAsset",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns the created CosellAsset resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/cosellAssets/getByInstanceID(instanceID={instanceID})"         : {
      "get": {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Returns a paged collection of CosellAsset resources for given CosellListing instanceID",
        "description": "Returns a paged collection of CosellAsset resources for given CosellListing instanceID",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "Instance ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of CosellAsset resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Cosell.CosellAsset_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/cosellAssets/{cosellAssetID}"                                  : {
      "get"   : {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Returns a CosellAsset",
        "description": "Returns a CosellAsset",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "cosellAssetID",
            "in"         : "path",
            "description": "ID of Cosellasset",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of CosellAsset resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put"   : {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Updates a CosellAsset",
        "description": "Updates a CosellAsset",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "cosellAssetID",
            "in"         : "path",
            "description": "ID of Cosellasset",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a CosellAsset",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns an updated CosellAsset resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "delete": {
        "tags"       : [
          "CosellAsset"
        ],
        "summary"    : "Deletes a CosellAsset",
        "description": "Deletes a CosellAsset",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "cosellAssetID",
            "in"         : "path",
            "description": "ID of Cosellasset",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "responses"  : {
          "204"    : {
            "description": "Success"
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/cosellListing/{instanceID}"                                    : {
      "get": {
        "tags"       : [
          "CosellListing"
        ],
        "summary"    : "Returns CosellListing resource",
        "description": "Returns CosellListing resource",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "Instance ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns an specific CosellListing resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellListing"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "put": {
        "tags"       : [
          "CosellListing"
        ],
        "summary"    : "Updates CosellListing resource",
        "description": "Updates CosellListing resource",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "Instance ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body of a CosellListing",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellListing"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns the updated CosellListing resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellListing"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/cosellListing/getByInstanceID(instanceID={instanceID})"        : {
      "get": {
        "tags"       : [
          "CosellListing"
        ],
        "summary"    : "Returns a paged collection of Listing resources",
        "description": "Returns a paged collection of Listing resources",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "name"       : "instanceID",
            "in"         : "path",
            "description": "Instance ID",
            "required"   : true,
            "schema"     : {
              "type": "string"
            }
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns a paged collection of CosellListing resource",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Cosell.CosellListing_"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/products/{productID}/resellerConfiguration"                                         : {
      "get" : {
        "tags"       : [
          "ResellerConfiguration"
        ],
        "summary"    : "Returns ResellerConfiguration for a product",
        "description": "Returns ResellerConfiguration for a product",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "responses"  : {
          "200"    : {
            "description": "Returns ResellerConfiguration for a product",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Reseller.ResellerConfiguration"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "tags"       : [
          "ResellerConfiguration"
        ],
        "summary"    : "Creates a ResellerConfiguration",
        "description": "Creates a ResellerConfiguration",
        "parameters" : [
          {
            "$ref": "#/components/parameters/productID"
          },
          {
            "$ref": "#/components/parameters/Authorization"
          }
        ],
        "requestBody": {
          "description": "Request body of a ResellerConfiguration",
          "content"    : {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Reseller.ResellerConfiguration"
              }
            }
          }
        },
        "responses"  : {
          "200"    : {
            "description": "Returns created ResellerConfiguration for a product",
            "headers"    : {
              "Request-ID": {
                "description": "ID of request generated by service",
                "schema"     : {
                  "type": "string"
                }
              }
            },
            "content"    : {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Reseller.ResellerConfiguration"
                }
              }
            }
          },
          "400"    : {
            "$ref": "#/components/responses/400"
          },
          "401"    : {
            "$ref": "#/components/responses/401"
          },
          "403"    : {
            "$ref": "#/components/responses/403"
          },
          "404"    : {
            "$ref": "#/components/responses/404"
          },
          "405"    : {
            "$ref": "#/components/responses/405"
          },
          "409"    : {
            "$ref": "#/components/responses/409"
          },
          "429"    : {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    }
  },
  "components"       : {
    "schemas"   : {
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Branches.Branch_"                     : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Branches.Branch"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Branches.Branch"                                                                            : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.IdentifiedResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"          : {
                "enum": [
                  "Branch"
                ],
                "type": "string"
              },
              "friendlyName"          : {
                "type": "string"
              },
              "type"                  : {
                "enum": [
                  "Main",
                  "Private"
                ],
                "type": "string"
              },
              "module"                : {
                "enum": [
                  "Listing",
                  "Property",
                  "Package",
                  "Availability",
                  "SupplementalContent",
                  "Cosell"
                ],
                "type": "string"
              },
              "currentDraftInstanceID": {
                "type": "string"
              },
              "variantID"             : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability_"  : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.FeatureAvailability"                                                         : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"         : {
                "enum": [
                  "FeatureAvailability"
                ],
                "type": "string"
              },
              "visibility"           : {
                "enum": [
                  "Public",
                  "Private"
                ],
                "type": "string"
              },
              "marketStates"         : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.MarketState"
                }
              },
              "properties"           : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              },
              "trial"                : {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.Trial"
              },
              "tenantAudiences"      : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.AudienceMember"
                }
              },
              "subscriptionAudiences": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.AudienceMember"
                }
              },
              "priceSchedules"       : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ScheduleInfo_Microsoft.Ingestion.Api.Models.Availabilities.PriceSchedule_"
                }
              },
              "customMeters"         : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.CustomMeter"
                }
              },
              "isHidden"             : {
                "type"    : "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.CustomMeter"                                                                 : {
        "type"      : "object",
        "properties": {
          "isEnabled"             : {
            "type": "boolean"
          },
          "ID"                    : {
            "type": "string"
          },
          "uniqueID"              : {
            "type": "string"
          },
          "displayName"           : {
            "type": "string"
          },
          "unitOfMeasure"         : {
            "type": "string"
          },
          "priceInUsd"            : {
            "type"    : "number",
            "format"  : "decimal",
            "nullable": true
          },
          "includedBaseQuantities": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.IncludedBaseQuantity"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.IncludedBaseQuantity"                                                        : {
        "type"      : "object",
        "properties": {
          "recurringUnit": {
            "type": "string"
          },
          "isInfinite"   : {
            "type": "boolean"
          },
          "quantity"     : {
            "type"    : "number",
            "format"  : "decimal",
            "nullable": true
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.MarketState"                                                                 : {
        "type"      : "object",
        "properties": {
          "marketCode": {
            "type"       : "string",
            "description": "ISO Country Code"
          },
          "state"     : {
            "enum": [
              "Disabled",
              "Enabled",
              "StopSelling",
              "Terminated"
            ],
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.TypeValuePair"                                                                       : {
        "type"      : "object",
        "properties": {
          "type" : {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.Trial"                                                                       : {
        "type"      : "object",
        "properties": {
          "type"         : {
            "enum": [
              "NoTrial",
              "TimedAccess",
              "TimedUsage",
              "Unlimited"
            ],
            "type": "string"
          },
          "durationType" : {
            "enum": [
              "Minute",
              "Days",
              "Months"
            ],
            "type": "string"
          },
          "duration"     : {
            "type"    : "integer",
            "format"  : "int32",
            "nullable": true
          },
          "dateTimeRange": {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTimeRange"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTimeRange"                                                      : {
        "type"      : "object",
        "properties": {
          "startAt": {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTime"
          },
          "endAt"  : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTime"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTime"                                                           : {
        "type"      : "object",
        "properties": {
          "localizePerMarket": {
            "type": "boolean"
          },
          "dateTimeInUtc"    : {
            "type"  : "string",
            "format": "date-time"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.Price"                                                                       : {
        "type"      : "object",
        "properties": {
          "priceTierID" : {
            "type": "string"
          },
          "openPrice"   : {
            "type"    : "number",
            "format"  : "double",
            "nullable": true
          },
          "currencyCode": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.PricingCadence"                                                              : {
        "type"      : "object",
        "properties": {
          "type" : {
            "enum": [
              "Month",
              "Year"
            ],
            "type": "string"
          },
          "value": {
            "type"  : "integer",
            "format": "int32"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.PricingUnit"                                                                 : {
        "type"      : "object",
        "properties": {
          "name"           : {
            "enum": [
              "sharedcore",
              "transactions"
            ],
            "type": "string"
          },
          "unitType"       : {
            "type": "string"
          },
          "isUnlimitedUnit": {
            "type": "boolean"
          },
          "lowerUnit"      : {
            "type"  : "integer",
            "format": "int32"
          },
          "upperUnit"      : {
            "type"  : "integer",
            "format": "int32"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.AudienceMember"                                                              : {
        "type"      : "object",
        "properties": {
          "ID"         : {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.PreviewMarketplaceGroup"                                                     : {
        "type" : "array",
        "items": {
          "type": "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.ScheduleInfo_Microsoft.Ingestion.Api.Models.Availabilities.PriceSchedule_"   : {
        "type"      : "object",
        "properties": {
          "isBaseSchedule": {
            "type": "boolean"
          },
          "marketCodes"   : {
            "type"       : "array",
            "items"      : {
              "type": "string"
            },
            "description": "ISO country code"
          },
          "friendlyName"  : {
            "type": "string"
          },
          "schedules"     : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.PriceSchedule"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.PriceSchedule"                                                               : {
        "type"      : "object",
        "properties": {
          "retailPrice"  : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.Price"
          },
          "pricingModel" : {
            "enum": [
              "Flat",
              "Recurring",
              "Usage"
            ],
            "type": "string"
          },
          "priceCadence" : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.PricingCadence"
          },
          "pricingUnits" : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.PricingUnit"
            }
          },
          "dateTimeRange": {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.LocalizedDateTimeRange"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingAsset_"               : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingAsset"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingAsset"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"          : {
                "enum": [
                  "ListingAsset"
                ],
                "type": "string"
              },
              "fileName"              : {
                "type": "string"
              },
              "type"                  : {
                "type": "string"
              },
              "fileSasUri"            : {
                "type": "string"
              },
              "publisherDefinedSasUri": {
                "type": "string"
              },
              "state"                 : {
                "enum": [
                  "PendingUpload",
                  "Uploaded",
                  "InProcessing",
                  "Processed",
                  "ProcessFailed"
                ],
                "type": "string"
              },
              "description"           : {
                "type": "string"
              },
              "friendlyName"          : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.BaseListing_"                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.AzureListing"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.BaseListing"                                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "languageCode"    : {
                "type": "string"
              },
              "title"           : {
                "type": "string"
              },
              "description"     : {
                "type": "string"
              },
              "shortDescription": {
                "type": "string"
              },
              "publisherName"   : {
                "type": "string"
              },
              "keywords"        : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.AzureListing"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.BaseListing"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                   : {
                "enum": [
                  "AzureListing"
                ],
                "type": "string"
              },
              "productDisplayName"             : {
                "type": "string"
              },
              "summary"                        : {
                "type": "string"
              },
              "listingUris"                    : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingUri"
                }
              },
              "listingContacts"                : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingContact"
                }
              },
              "accessInformation"              : {
                "type": "string"
              },
              "gettingStartedInstructions"     : {
                "type": "string"
              },
              "allowOnlyManagedDiskDeployments": {
                "type"    : "boolean",
                "nullable": true
              },
              "compatibleProducts"             : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingUri"                                                                        : {
        "type"      : "object",
        "properties": {
          "type"       : {
            "type": "string"
          },
          "subtype"    : {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          },
          "uri"        : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingContact"                                                                    : {
        "type"      : "object",
        "properties": {
          "type" : {
            "enum": [
              "CustomerSupport",
              "Engineering",
              "ChannelManager"
            ],
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name" : {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "uri"  : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingImage_"               : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingImage"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingImage"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType": {
                "enum": [
                  "ListingImage"
                ],
                "type": "string"
              },
              "fileName"    : {
                "type": "string"
              },
              "type"        : {
                "type": "string"
              },
              "fileSasUri"  : {
                "type": "string"
              },
              "state"       : {
                "enum": [
                  "PendingUpload",
                  "Uploaded",
                  "InProcessing",
                  "Processed",
                  "ProcessFailed"
                ],
                "type": "string"
              },
              "description" : {
                "type": "string"
              },
              "order"       : {
                "type"  : "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Listings.ListingVideo_"               : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideo"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingVideo"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType": {
                "enum": [
                  "ListingVideo"
                ],
                "type": "string"
              },
              "fileName"    : {
                "type": "string"
              },
              "fileSasUri"  : {
                "type": "string"
              },
              "streamingUri": {
                "type": "string"
              },
              "state"       : {
                "enum": [
                  "PendingUpload",
                  "Uploaded",
                  "InProcessing",
                  "Processed",
                  "ProcessFailed"
                ],
                "type": "string"
              },
              "thumbnail"   : {
                "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Listings.ListingVideoThumbnail"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Listings.ListingVideoThumbnail"                                                             : {
        "type"      : "object",
        "properties": {
          "fileName"              : {
            "type": "string"
          },
          "title"                 : {
            "type": "string"
          },
          "description"           : {
            "type": "string"
          },
          "fileSasUri"            : {
            "type": "string"
          },
          "publisherDefinedSasUri": {
            "type": "string"
          },
          "state"                 : {
            "enum": [
              "PendingUpload",
              "Uploaded",
              "InProcessing",
              "Processed",
              "ProcessFailed"
            ],
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_"   : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"                                                          : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"                                    : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"              : {
                "enum": [
                  "Dynamics365BusinessCentralPackageConfiguration"
                ],
                "type": "string"
              },
              "packageType"               : {
                "enum": [
                  "AddOn",
                  "Connect"
                ],
                "type": "string"
              },
              "applicationInstallationUri": {
                "type": "string"
              },
              "packageReferences"         : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"                                 : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                             : {
                "enum": [
                  "Dynamics365CustomerEngagementPackageConfiguration"
                ],
                "type": "string"
              },
              "baseLicenseModel"                         : {
                "enum": [
                  "Resource",
                  "User"
                ],
                "type": "string"
              },
              "requireS2SOutboundAndCrmSecureStoreAccess": {
                "type"    : "boolean",
                "nullable": true
              },
              "applicationConfigurationUri"              : {
                "type": "string"
              },
              "packageLocationUri"                       : {
                "type": "string"
              },
              "packageRegionAvailabilities"              : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.PackageRegionAvailability"
                }
              },
              "multiplePackagesInPackageFile"            : {
                "type"    : "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.PackageRegionAvailability"                                                         : {
        "type"      : "object",
        "properties": {
          "region"                     : {
            "enum": [
              "NorthAmerica",
              "SouthAmerica",
              "Canada",
              "Emea",
              "India",
              "Japan",
              "Apac",
              "Australia",
              "UnitedKingdom",
              "GermanySovereign",
              "USGovSovereign",
              "USGovHighSovereign",
              "ChinaSovereign",
              "TipSovereign",
              "France",
              "USDepartmentOfDefense"
            ],
            "type": "string"
          },
          "isAvailable"                : {
            "type"    : "boolean",
            "nullable": true
          },
          "applicationConfigurationUri": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"                                         : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"      : {
                "enum": [
                  "Dynamics365OperationsPackageConfiguration"
                ],
                "type": "string"
              },
              "releaseVersion"    : {
                "type": "string"
              },
              "solutionIdentifier": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"                                              : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                     : {
                "enum": [
                  "AzureApplicationPackageConfiguration"
                ],
                "type": "string"
              },
              "azureActiveDirectoryTenantID"     : {
                "type": "string"
              },
              "azureActiveDirectoryApplicationID": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                 : {
                "enum": [
                  "AzureManagedApplicationPackageConfiguration"
                ],
                "type": "string"
              },
              "version"                      : {
                "type": "string"
              },
              "allowJitAccess"               : {
                "type"    : "boolean",
                "nullable": true
              },
              "canEnableCustomerActions"     : {
                "type"    : "boolean",
                "nullable": true
              },
              "allowedCustomerActions"       : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "publicAzureTenantID"          : {
                "type": "string"
              },
              "publicAzureAuthorizations"    : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.RoleAuthorization"
                }
              },
              "azureGovernmentTenantID"      : {
                "type": "string"
              },
              "azureGovernmentAuthorizations": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.RoleAuthorization"
                }
              },
              "policies"                     : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePolicy"
                }
              },
              "packageReferences"            : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.RoleAuthorization"                                                                 : {
        "type"      : "object",
        "properties": {
          "principalID"     : {
            "type": "string"
          },
          "roleDefinitionID": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzurePolicy"                                                                       : {
        "type"      : "object",
        "properties": {
          "policyName"        : {
            "type": "string"
          },
          "policyDefinitionID": {
            "type": "string"
          },
          "policyParameters"  : {
            "type": "string"
          },
          "policySku"         : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"                                         : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"     : {
                "enum": [
                  "AzureSolutionTemplatePackageConfiguration"
                ],
                "type": "string"
              },
              "version"          : {
                "type": "string"
              },
              "packageReferences": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureBaseTestDrivePackageConfiguration"                                            : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "azureActiveDirectoryApplicationID" : {
                "type": "string"
              },
              "azureActiveDirectoryApplicationKey": {
                "type": "string"
              },
              "azureActiveDirectoryTenantID"      : {
                "type": "string"
              },
              "testDriveDuration"                 : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"                                 : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureBaseTestDrivePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"       : {
                "enum": [
                  "AzureResourceManagerTestDrivePackageConfiguration"
                ],
                "type": "string"
              },
              "regions"            : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "hotInstances"       : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "warmInstances"      : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "coldInstances"      : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "azureSubscriptionID": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"                           : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureBaseTestDrivePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                  : {
                "enum": [
                  "Dynamics365BusinessCentralTestDrivePackageConfiguration"
                ],
                "type": "string"
              },
              "azureActiveDirectoryTenantName": {
                "type": "string"
              },
              "maxConcurrentTestDrives"       : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "instanceUri"                   : {
                "type": "string"
              },
              "roleName"                      : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"                        : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureBaseTestDrivePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                  : {
                "enum": [
                  "Dynamics365CustomerEngagementTestDrivePackageConfiguration"
                ],
                "type": "string"
              },
              "azureActiveDirectoryTenantName": {
                "type": "string"
              },
              "maxConcurrentTestDrives"       : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "instanceUri"                   : {
                "type": "string"
              },
              "roleName"                      : {
                "type": "string"
              },
              "instanceWebApiUri"             : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"                                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzureBaseTestDrivePackageConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                  : {
                "enum": [
                  "Dynamics365OperationsTestDrivePackageConfiguration"
                ],
                "type": "string"
              },
              "azureActiveDirectoryTenantName": {
                "type": "string"
              },
              "maxConcurrentTestDrives"       : {
                "type"    : "integer",
                "format"  : "int32",
                "nullable": true
              },
              "instanceUri"                   : {
                "type": "string"
              },
              "roleName"                      : {
                "type": "string"
              },
              "trialLegalEntity"              : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.BasePackage"                                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType": {
                "type": "string"
              },
              "state"       : {
                "enum": [
                  "PendingUpload",
                  "Uploaded",
                  "InProcessing",
                  "Processed",
                  "ProcessFailed"
                ],
                "type": "string"
              },
              "isEmpty"     : {
                "type"    : "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzurePackage"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.BasePackage"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"   : {
                "enum": [
                  "",
                  "AzureApplicationPackage",
                  "Dynamics365BusinessCentralAddOnExtensionPackage",
                  "Dynamics365BusinessCentralAddOnLibraryExtensionPackage",
                  "Dynamics365BusinessCentralAddOnDependencyPackage"
                ],
                "type": "string"
              },
              "fileName"       : {
                "type": "string"
              },
              "fileSasUri"     : {
                "type": "string"
              },
              "fileSize"       : {
                "type"    : "number",
                "format"  : "long",
                "nullable": true
              },
              "validationItems": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.ValidationItem"
                }
              },
              "publishTargets" : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.PublishTarget"
                }
              },
              "isCertified"    : {
                "type"    : "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Packages.PublishTarget"                                                                     : {
        "type"      : "object",
        "properties": {
          "sandboxId"             : {
            "type": "string"
          },
          "trainId"               : {
            "type": "string"
          },
          "firstPublishedDateTime": {
            "type"    : "string",
            "format"  : "date-time",
            "nullable": true
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackage_"                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Packages.AzurePackage"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability_"  : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Availabilities.ProductAvailability"                                                         : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"         : {
                "enum": [
                  "ProductAvailability"
                ],
                "type": "string"
              },
              "visibility"           : {
                "type": "string"
              },
              "enterpriseLicensing"  : {
                "type": "string"
              },
              "audiences"            : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.PreviewMarketplaceGroup"
                }
              },
              "emailAudiences"       : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.AudienceMember"
                }
              },
              "subscriptionAudiences": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Availabilities.AudienceMember"
                }
              },
              "hideKeyAudience"      : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.TypedResource"                                                                       : {
        "type"      : "object",
        "properties": {
          "resourceType": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.IdentifiedResource"                                                                  : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypedResource"
          },
          {
            "type"      : "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.EntityResource"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.IdentifiedResource"
          },
          {
            "type"      : "object",
            "properties": {
              "@odata.etag": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Products.BaseProduct"                                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.IdentifiedResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"       : {
                "enum": [
                  "Application",
                  "AvatarItem",
                  "Bundle",
                  "Consumable",
                  "Durable",
                  "DurableWithBits",
                  "InternetOfThings",
                  "ManagedConsumable",
                  "SeasonPass",
                  "Subscription",
                  "AzureApplication",
                  "AzureDeveloperService",
                  "AzureThirdPartyVirtualMachine",
                  "AzureContainer",
                  "AzureVisualStudioExtension",
                  "AzureDynamics365ForCustomerEngagement",
                  "AzureDynamics365ForOperations",
                  "AzureDynamics365BusinessCentral"
                ],
                "type": "string"
              },
              "name"               : {
                "type": "string"
              },
              "externalIds"        : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              },
              "isModularPublishing": {
                "type"    : "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Products.BaseProduct_"                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.AzureProduct"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Products.AzureProduct"                                                                      : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Products.BaseProduct"
          },
          {
            "type"      : "object",
            "properties": {
              "offerMarketingUrlIDentifier": {
                "type": "string"
              },
              "resourceType"               : {
                "enum": [
                  "AzureApplication",
                  "AzureDeveloperService",
                  "AzureThirdPartyVirtualMachine",
                  "AzureContainer",
                  "AzureVisualStudioExtension",
                  "AzureDynamics365ForCustomerEngagement",
                  "AzureDynamics365ForOperations",
                  "AzureDynamics365BusinessCentral"
                ],
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Products.ProductStoreLink"                                                                  : {
        "type"      : "object",
        "properties": {
          "storeUri"         : {
            "type": "string"
          },
          "storeProtocolLink": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Products.AzureProductSetup"                                                                 : {
        "type"      : "object",
        "properties": {
          "resourceType"   : {
            "enum": [
              "AzureProductSetup"
            ],
            "type": "string"
          },
          "sellingOption"  : {
            "enum": [
              "ListingOnly",
              "ListAndSell"
            ],
            "type": "string"
          },
          "callToAction"   : {
            "enum": [
              "free",
              "free-trial",
              "contact-me"
            ],
            "type": "string"
          },
          "trialUri"       : {
            "type": "string"
          },
          "enableTestDrive": {
            "type"    : "boolean",
            "nullable": true
          },
          "testDriveType"  : {
            "type": "string"
          },
          "channelStates"  : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Properties.BaseProperty_"             : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.AzureProperty"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Properties.AzureProperty"                                                                   : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.BaseProperty"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"         : {
                "enum": [
                  "AzureProperty"
                ],
                "type": "string"
              },
              "industries"           : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "leveledCategories"    : {
                "type"      : "object",
                "properties": {
                  "analytics-azure-apps"         : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "big-data",
                        "data-analytics",
                        "data-insights",
                        "predictive-analytics",
                        "real-time-streaming-analytics",
                        "other-analytics"
                      ]
                    }
                  },
                  "ai-plus-machine-learning"     : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "automated-ml",
                        "bot-services",
                        "business-robotic-process-automation",
                        "cognitive-services",
                        "data-labeling",
                        "data-preparation",
                        "knowledge-mining",
                        "ml-operations",
                        "ml-service",
                        "other"
                      ]
                    }
                  },
                  "compute-azure-apps"           : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "application-infrastructure",
                        "cache",
                        "operating-systems",
                        "other-compute"
                      ]
                    }
                  },
                  "blockchain"                   : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "app-accelerators",
                        "multi-node-ledger",
                        "single-node-leder",
                        "tools",
                        "other"
                      ]
                    }
                  },
                  "containers"                   : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "container-apps",
                        "container-images",
                        "get-started-with-containers",
                        "other"
                      ]
                    }
                  },
                  "database"                     : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "data-lakes",
                        "data-warehouse",
                        "ledger-blockchain-databases",
                        "nosql-databases",
                        "relational-databases",
                        "other-databases"
                      ]
                    }
                  },
                  "developer-tools-azure-apps"   : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "developer-service",
                        "scripts",
                        "tools-developer-tools",
                        "other-developer-tools"
                      ]
                    }
                  },
                  "devops"                       : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "other"
                      ]
                    }
                  },
                  "identity"                     : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "access-management",
                        "other"
                      ]
                    }
                  },
                  "integration"                  : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "messaging",
                        "other"
                      ]
                    }
                  },
                  "internet-of-things-azure-apps": {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "iot-analytics-and-data",
                        "iot-connectivity",
                        "iot-edge-modules",
                        "iot-and-iiot-platforms",
                        "iot-security",
                        "iot-solutions",
                        "other-azure-apps"
                      ]
                    }
                  },
                  "it-and-management-tools"      : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "business-applications",
                        "management-solutions",
                        "other"
                      ]
                    }
                  },
                  "media"                        : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "content-protection",
                        "live-and-on-demand-streaming",
                        "media-services",
                        "other"
                      ]
                    }
                  },
                  "migration"                    : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "data-migration",
                        "other"
                      ]
                    }
                  },
                  "mixed-reality"                : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "other"
                      ]
                    }
                  },
                  "monitoring-and-diagnostics"   : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "other"
                      ]
                    }
                  },
                  "networking"                   : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "appliance-managers",
                        "connectivity",
                        "firewalls",
                        "load-balancers",
                        "other"
                      ]
                    }
                  },
                  "security"                     : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "identity-and-access-management",
                        "information-protection",
                        "threat-protection",
                        "other"
                      ]
                    }
                  },
                  "storage-azure-apps"           : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "backup-and-recovery",
                        "data-ingest-slash-etl",
                        "data-management",
                        "enterprise-hybrid-storage",
                        "block-file-and-object-sharing",
                        "other-storage"
                      ]
                    }
                  },
                  "web"                          : {
                    "type" : "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "blogs-and-cms",
                        "ecommerce",
                        "smarter-web-apps",
                        "web-apps",
                        "web-apps-framework",
                        "other"
                      ]
                    }
                  }
                }
              },
              "categories"           : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "additionalCategories" : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "submissionVersion"    : {
                "type": "string"
              },
              "hideKeys"             : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "productTags"          : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "appVersion"           : {
                "type": "string"
              },
              "useEnterpriseContract": {
                "type": "boolean"
              },
              "termsOfUse"           : {
                "type": "string"
              },
              "marketingOnlyChange"  : {
                "type": "boolean"
              },
              "globalAmendmentTerms" : {
                "type": "string"
              },
              "customAmendments"     : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.CustomAmendment"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Properties.CustomAmendment"                                                                 : {
        "type"      : "object",
        "properties": {
          "name"   : {
            "type": "string"
          },
          "terms"  : {
            "type": "string"
          },
          "tenants": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Properties.Tenant"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Properties.Tenant"                                                                          : {
        "type"      : "object",
        "properties": {
          "ID"         : {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Properties.BaseProperty"                                                                    : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Submissions.Submission"                                                                     : {
        "type"      : "object",
        "properties": {
          "resourceType"      : {
            "enum": [
              "Submission"
            ],
            "type": "string"
          },
          "state"             : {
            "enum": [
              "InProgress",
              "Published"
            ],
            "type": "string"
          },
          "substate"          : {
            "enum": [
              "InDraft",
              "Submitted",
              "Failed",
              "FailedInCertification",
              "ReadyToPublish",
              "Publishing",
              "Published",
              "InStore"
            ],
            "type": "string"
          },
          "targets"           : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          },
          "resources"         : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          },
          "variantResources"  : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.VariantResource"
            }
          },
          "publishOption"     : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.PublishOption"
          },
          "publishedTimeInUtc": {
            "type"  : "string",
            "format": "date-time"
          },
          "pendingUpdateInfo" : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.PendingUpdateInfo"
          },
          "extendedProperties": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          },
          "releaseNumber"     : {
            "type"  : "integer",
            "format": "int32"
          },
          "friendlyName"      : {
            "type": "string"
          },
          "areResourcesReady" : {
            "type": "boolean"
          },
          "id"                : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.CertificationReport_"     : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.CertificationReport"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Submissions.CertificationReport"                                                            : {
        "type"      : "object",
        "properties": {
          "reportTimeInUtc": {
            "type"  : "string",
            "format": "date-time"
          },
          "status"         : {
            "enum": [
              "Pending",
              "Failed",
              "Passed",
              "PassedWithNotes",
              "Unknown"
            ],
            "type": "string"
          },
          "fileUri"        : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Submissions.VariantResource"                                                                : {
        "type"      : "object",
        "properties": {
          "variantID": {
            "type": "string"
          },
          "resources": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Submissions.PublishOption"                                                                  : {
        "type"      : "object",
        "properties": {
          "releaseTimeInUtc"  : {
            "type"    : "string",
            "format"  : "date-time",
            "nullable": true
          },
          "isManualPublish"   : {
            "type": "boolean"
          },
          "isAutoPromote"     : {
            "type": "boolean"
          },
          "certificationNotes": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Submissions.PendingUpdateInfo"                                                              : {
        "type"      : "object",
        "properties": {
          "updateType"   : {
            "type": "string"
          },
          "status"       : {
            "type": "string"
          },
          "href"         : {
            "type": "string"
          },
          "failureReason": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.Submission_"              : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.Submission"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Submissions.SubmissionCreationRequest"                                                      : {
        "type"      : "object",
        "properties": {
          "resourceType"      : {
            "enum": [
              "SubmissionCreationRequest"
            ],
            "type": "string"
          },
          "targets"           : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          },
          "resources"         : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          },
          "variantResources"  : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.VariantResource"
            }
          },
          "publishOption"     : {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.PublishOption"
          },
          "extendedProperties": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Submissions.ValidationItem"                                                                 : {
        "type"      : "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "severity" : {
            "type": "string"
          },
          "message"  : {
            "type": "string"
          },
          "resource" : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.ValidationItem_"          : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.ValidationItem"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Submissions.WorkflowDetail_"          : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.WorkflowDetail"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Submissions.WorkflowDetail"                                                                 : {
        "type"      : "object",
        "properties": {
          "type"                 : {
            "type": "string"
          },
          "state"                : {
            "type": "string"
          },
          "targetEnvironment"    : {
            "type": "string"
          },
          "workflowSteps"        : {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Submissions.WorkflowStepDetail"
            }
          },
          "startDateTimeInUtc"   : {
            "type"  : "string",
            "format": "date-time"
          },
          "completeDateTimeInUtc": {
            "type"  : "string",
            "format": "date-time"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Submissions.WorkflowStepDetail"                                                             : {
        "type"      : "object",
        "properties": {
          "name"                 : {
            "type": "string"
          },
          "state"                : {
            "type": "string"
          },
          "startDateTimeInUtc"   : {
            "type"  : "string",
            "format": "date-time"
          },
          "completeDateTimeInUtc": {
            "type"  : "string",
            "format": "date-time"
          }
        }
      },
      "Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"     : {
                "enum": [
                  "SupplementalContent"
                ],
                "type": "string"
              },
              "targetRelease"    : {
                "type": "string"
              },
              "supportedEditions": {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "assets"           : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContentAsset"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContentAsset"                                                  : {
        "type"      : "object",
        "properties": {
          "assetID"   : {
            "type": "string"
          },
          "fileName"  : {
            "type": "string"
          },
          "type"      : {
            "type": "string"
          },
          "fileSasUri": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent_": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.DataModel.Certification.SupplementalContent"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Variants.BaseVariant"                                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"      : {
                "enum": [
                  "BaseVariant",
                  "AzureSkuVariant",
                  "AzureTestDriveVariant"
                ],
                "type": "string"
              },
              "friendlyName"      : {
                "type": "string"
              },
              "extendedProperties": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"                                                                   : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.BaseVariant"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"                 : {
                "enum": [
                  "AzureSkuVariant"
                ],
                "type": "string"
              },
              "state"                        : {
                "enum": [
                  "Inactive",
                  "Active"
                ],
                "type": "string"
              },
              "conversionPaths"              : {
                "type": "string"
              },
              "leadGenID"                    : {
                "type": "string"
              },
              "externalID"                   : {
                "type": "string"
              },
              "referenceVariantID"           : {
                "type": "string"
              },
              "azureGovernmentCertifications": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureGovernmentCertification"
                }
              },
              "cloudAvailabilities"          : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Variants.AzureGovernmentCertification"                                                      : {
        "type"      : "object",
        "properties": {
          "validationResults": {
            "type" : "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.ValidationResult"
            }
          },
          "title"            : {
            "type": "string"
          },
          "uri"              : {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Variants.ValidationResult"                                                                  : {
        "type"      : "object",
        "properties": {
          "memberNames" : {
            "type" : "array",
            "items": {
              "type": "string"
            }
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"                                                             : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.BaseVariant"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType" : {
                "enum": [
                  "AzureTestDriveVariant"
                ],
                "type": "string"
              },
              "testDriveType": {
                "type": "string"
              },
              "state"        : {
                "enum": [
                  "Inactive",
                  "Active"
                ],
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_"                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"
                    },
                    {
                      "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypedResource"
          },
          {
            "type"      : "object",
            "properties": {
              "dailyDigestEmailContacts": {
                "type"       : "array",
                "items"      : {
                  "type": "string"
                },
                "description": "Daily Digest Email Contacts. Only for consulting service offer type. Emails configured here will be sent daily emails for all the leads generated for this offer that day."
              },
              "contactEmail"            : {
                "type"       : "string",
                "description": "Contact Email"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"                                                 : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"    : {
                "enum": [
                  "AzureTableLeadConfiguration"
                ],
                "type": "string"
              },
              "connectionString": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"                                                  : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"    : {
                "enum": [
                  "AzureBlobLeadConfiguration"
                ],
                "type": "string"
              },
              "connectionString": {
                "type": "string"
              },
              "containerName"   : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"                     : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"  : {
                "enum": [
                  "DynamicsCustomerRelationshipManagementLeadConfiguration"
                ],
                "type": "string"
              },
              "uri"           : {
                "type": "string"
              },
              "authentication": {
                "type": "string"
              },
              "userName"      : {
                "type": "string"
              },
              "password"      : {
                "type": "string"
              },
              "applicationID" : {
                "type": "string"
              },
              "applicationKey": {
                "type": "string"
              },
              "directoryID"   : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"                                              : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"    : {
                "enum": [
                  "HttpsEndpointLeadConfiguration"
                ],
                "type": "string"
              },
              "httpsEndpointUri": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"                                                    : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"     : {
                "enum": [
                  "MarketoLeadConfiguration"
                ],
                "type": "string"
              },
              "serverID"         : {
                "type": "string"
              },
              "munchkinAccountID": {
                "type": "string"
              },
              "formID"           : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"                                                 : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.LeadManagement.BaseLeadConfiguration"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"    : {
                "enum": [
                  "SalesForceLeadConfiguration"
                ],
                "type": "string"
              },
              "objectIdentifier": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"                                                                         : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType": {
                "enum": [
                  "CosellAsset"
                ],
                "type": "string"
              },
              "fileName"    : {
                "type": "string"
              },
              "type"        : {
                "type": "string"
              },
              "fileSasUri"  : {
                "type": "string"
              },
              "state"       : {
                "type": "string"
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Cosell.CosellAsset_"                  : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellAsset"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Cosell.CosellListing"                                                                       : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.EntityResource"
          },
          {
            "type"      : "object",
            "properties": {
              "resourceType"       : {
                "enum": [
                  "CosellListing"
                ],
                "type": "string"
              },
              "offerPlatforms"     : {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "endCustomerSegments": {
                "type" : "array",
                "items": {
                  "type": "string"
                }
              },
              "offerType"          : {
                "type": "string"
              },
              "solutionAreas"      : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellSolutionArea"
                }
              },
              "contacts"           : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellContact"
                }
              },
              "assetReferences"    : {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.TypeValuePair"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Cosell.CosellListing_"                : {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Common.PagedCollection"
          },
          {
            "type"      : "object",
            "properties": {
              "value": {
                "type" : "array",
                "items": {
                  "$ref": "#/components/schemas/Microsoft.Ingestion.Api.Models.Cosell.CosellListing"
                }
              }
            }
          }
        ]
      },
      "Microsoft.Ingestion.Api.Models.Cosell.CosellContact"                                                                       : {
        "type"      : "object",
        "properties": {
          "type"      : {
            "type": "string"
          },
          "email"     : {
            "type": "string"
          },
          "name"      : {
            "type": "string"
          },
          "jobTitle"  : {
            "type": "string"
          },
          "role"      : {
            "type": "string"
          },
          "regions"   : {
            "type" : "array",
            "items": {
              "type": "string"
            }
          },
          "subRegions": {
            "type" : "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Cosell.CosellSolutionArea"                                                                  : {
        "type"      : "object",
        "properties": {
          "area"    : {
            "type": "string"
          },
          "subAreas": {
            "type" : "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection"                                                                     : {
        "type"      : "object",
        "properties": {
          "@odata.nextLink": {
            "type": "string"
          }
        }
      },
      "Microsoft.Ingestion.Api.Models.Reseller.ResellerConfiguration"                                                             : {
        "type"      : "object",
        "properties": {
          "resourceType"        : {
            "enum": [
              "ResellerConfiguration"
            ],
            "type": "string"
          },
          "resellerChannelState": {
            "enum": [
              "Disabled",
              "PartialOptIn",
              "OptOut",
              "Enabled"
            ],
            "type": "string"
          },
          "tenantIds"           : {
            "type" : "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "responses" : {
      "204"    : {
        "description": "Success",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "400"    : {
        "description": "Bad Request",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "401"    : {
        "description": "Unauthorized",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403"    : {
        "description": "Forbidden",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "404"    : {
        "description": "Resource not available",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "405"    : {
        "description": "Method not allowed",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "409"    : {
        "description": "Conflict",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "429"    : {
        "description": "Request rate exceeds limit",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "default": {
        "description": "Unknown error",
        "content"    : {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "Authorization"            : {
        "name"       : "Authorization",
        "in"         : "header",
        "description": "User authorization",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "Client-Request-ID"        : {
        "name"       : "Client-Request-ID",
        "in"         : "header",
        "description": "ID of request provIDed by user",
        "schema"     : {
          "type": "string"
        }
      },
      "productID"                : {
        "name"       : "productID",
        "in"         : "path",
        "description": "ID of product",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "instanceID"               : {
        "name"       : "instanceID",
        "in"         : "path",
        "description": "Resource instance ID",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "submissionID"             : {
        "name"       : "submissionID",
        "in"         : "path",
        "description": "ID of submission",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "variantID"                : {
        "name"       : "variantID",
        "in"         : "path",
        "description": "ID of variant",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "listingID"                : {
        "name"       : "listingID",
        "in"         : "path",
        "description": "ID of listing",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "assetID"                  : {
        "name"       : "assetID",
        "in"         : "path",
        "description": "ID of asset",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "imageID"                  : {
        "name"       : "imageID",
        "in"         : "path",
        "description": "ID of image",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "featureAvailabilityID"    : {
        "name"       : "featureAvailabilityID",
        "in"         : "path",
        "description": "Feature availability ID",
        "required"   : true,
        "schema"     : {
          "type": "string"
        }
      },
      "FeatureAvailabilityExpand": {
        "name"       : "$expand",
        "in"         : "query",
        "description": "Use $expand to include MarketStates, PriceSchedules, and Trial in request/response",
        "schema"     : {
          "type": "string"
        }
      }
    },
    "examples"  : {
      "Microsoft.Ingestion.Api.Models.LeadManagement.AzureBlobLeadConfiguration"                                                                                                         : {
        "value": {
          "resourceType"            : "AzureBlobLeadConfiguration",
          "containerName"           : "containerName",
          "connectionString"        : "connectionString",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.AzureTableLeadConfiguration"                                                                                                        : {
        "value": {
          "resourceType"            : "AzureTableLeadConfiguration",
          "connectionString"        : "connectionString",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.DynamicsCustomerRelationshipManagementLeadConfiguration"                                                                            : {
        "value": {
          "resourceType"            : "DynamicsCustomerRelationshipManagementLeadConfiguration",
          "uri"                     : "uri",
          "authentication"          : "authentication",
          "userName"                : "userName",
          "password"                : "password",
          "applicationID"           : "applicationID",
          "applicationKey"          : "applicationKey",
          "directoryID"             : "directoryID",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.HttpsEndpointLeadConfiguration"                                                                                                     : {
        "value": {
          "resourceType"            : "HttpsEndpointLeadConfiguration",
          "httpsEndpointUri"        : "httpsEndpointUri",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.MarketoLeadConfiguration"                                                                                                           : {
        "value": {
          "resourceType"            : "MarketoLeadConfiguration",
          "serverID"                : "serverID",
          "munchkinAccountID"       : "munchkinAccountID",
          "formID"                  : "formID",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.LeadManagement.SalesForceLeadConfiguration"                                                                                                        : {
        "value": {
          "resourceType"            : "SalesForceLeadConfiguration",
          "objectIdentifier"        : "objectIdentifier",
          "dailyDigestEmailContacts": [
            "string"
          ],
          "contactEmail"            : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralPackageConfiguration"                                                                                           : {
        "value": {
          "resourceType"              : "Dynamics365BusinessCentralPackageConfiguration",
          "packageType"               : "AddOn",
          "applicationInstallationUri": "applicationInstallationUri",
          "packageReferences"         : [
            {
              "type" : "type",
              "value": "value"
            }
          ],
          "ID"                        : "string",
          "@odata.etag"               : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementPackageConfiguration"                                                                                        : {
        "value": {
          "resourceType"                             : "Dynamics365CustomerEngagementPackageConfiguration",
          "baseLicenceModel"                         : "baseLicenceModel",
          "requireS2SOutboundAndCrmSecureStoreAccess": "true",
          "applicationConfigurationUri"              : "applicationConfigurationUri",
          "packageLocationUri"                       : "packageLocationUri",
          "packageRegionAvailabilities"              : [
            {
              "region"                     : "region",
              "isAvailable"                : "true",
              "applicationConfigurationUri": "applicationConfigurationUri"
            }
          ],
          "multiplePackagesInPackageFile"            : "false",
          "ID"                                       : "string",
          "@odata.etag"                              : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsPackageConfiguration"                                                                                                : {
        "value": {
          "resourceType"      : "Dynamics365OperationsPackageConfiguration",
          "releaseVersion"    : "releaseVersion",
          "solutionIdentifier": "solutionIdentifier",
          "ID"                : "string",
          "@odata.etag"       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureApplicationPackageConfiguration"                                                                                                     : {
        "value": {
          "resourceType"                     : "AzureApplicationPackageConfiguration",
          "azureActiveDirectoryTenantID"     : "string",
          "azureActiveDirectoryApplicationID": "string",
          "ID"                               : "string",
          "@odata.etag"                      : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureManagedApplicationPackageConfiguration"                                                                                              : {
        "value": {
          "resourceType"                 : "AzureManagedApplicationPackageConfiguration",
          "version"                      : "string",
          "allowJitAccess"               : "true",
          "canEnableCustomerActions"     : "true",
          "allowedCustomerActions"       : [
            "string"
          ],
          "publicAzureTenantID"          : "string",
          "publicAzureAuthorizations"    : [
            {
              "principalID"     : "string",
              "roleDefinitionID": "string"
            }
          ],
          "azureGovernmentTenantID"      : "string",
          "azureGovernmentAuthorizations": [
            {
              "principalID"     : "string",
              "roleDefinitionID": "string"
            }
          ],
          "policies"                     : [
            {
              "policyName"        : "string",
              "policyDefinitionID": "string",
              "policyParameters"  : "string",
              "policySku"         : "string"
            }
          ],
          "packageReferences"            : [
            {
              "type" : "AzureApplicationPackage",
              "value": "packageID"
            }
          ],
          "ID"                           : "string",
          "@odata.etag"                  : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureSolutionTemplatePackageConfiguration"                                                                                                : {
        "value": {
          "resourceType"     : "AzureSolutionTemplatePackageConfiguration",
          "version"          : "string",
          "packageReferences": [
            {
              "type" : "AzureApplicationPackage",
              "value": "packageID"
            }
          ],
          "ID"               : "string",
          "@odata.etag"      : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.AzureResourceManagerTestDrivePackageConfiguration"                                                                                        : {
        "value": {
          "resourceType"                      : "AzureResourceManagerTestDrivePackageConfiguration",
          "regions"                           : [
            "string"
          ],
          "hotInstances"                      : "1",
          "warmInstances"                     : "1",
          "coldInstances"                     : "1",
          "azureSubscriptionID"               : "string",
          "azureActiveDirectoryApplicationID" : "string",
          "azureActiveDirectoryApplicationKey": "string",
          "azureActiveDirectoryTenantID"      : "string",
          "testDriveDuration"                 : "1",
          "ID"                                : "string",
          "@odata.etag"                       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365BusinessCentralTestDrivePackageConfiguration"                                                                                  : {
        "value": {
          "resourceType"                      : "Dynamics365BusinessCentralTestDrivePackageConfiguration",
          "azureActiveDirectoryTenantName"    : "string",
          "maxConcurrentTestDrives"           : "1",
          "instanceUri"                       : "string",
          "roleName"                          : "string",
          "azureActiveDirectoryApplicationID" : "string",
          "azureActiveDirectoryApplicationKey": "string",
          "azureActiveDirectoryTenantID"      : "string",
          "testDriveDuration"                 : "int",
          "ID"                                : "string",
          "@odata.etag"                       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365CustomerEngagementTestDrivePackageConfiguration"                                                                               : {
        "value": {
          "resourceType"                      : "Dynamics365CustomerEngagementTestDrivePackageConfiguration",
          "azureActiveDirectoryTenantName"    : "string",
          "maxConcurrentTestDrives"           : "1",
          "instanceUri"                       : "string",
          "roleName"                          : "string",
          "instanceWebApiUri"                 : "string",
          "azureActiveDirectoryApplicationID" : "string",
          "azureActiveDirectoryApplicationKey": "string",
          "azureActiveDirectoryTenantID"      : "string",
          "testDriveDuration"                 : "1",
          "ID"                                : "string",
          "@odata.etag"                       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Packages.Dynamics365OperationsTestDrivePackageConfiguration"                                                                                       : {
        "value": {
          "resourceType"                      : "Dynamics365OperationsTestDrivePackageConfiguration",
          "azureActiveDirectoryTenantName"    : "string",
          "maxConcurrentTestDrives"           : "1",
          "instanceUri"                       : "string",
          "roleName"                          : "string",
          "trialLegalEntity"                  : "string",
          "azureActiveDirectoryApplicationID" : "string",
          "azureActiveDirectoryApplicationKey": "string",
          "azureActiveDirectoryTenantID"      : "string",
          "testDriveDuration"                 : "1",
          "ID"                                : "string",
          "@odata.etag"                       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365BusinessCentralPackageConfiguration"            : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"              : "Dynamics365BusinessCentralPackageConfiguration",
              "packageType"               : "AddOn",
              "applicationInstallationUri": "applicationInstallationUri",
              "packageReferences"         : [
                {
                  "type" : "type",
                  "value": "value"
                }
              ],
              "ID"                        : "string",
              "@odata.etag"               : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365CustomerEngagementPackageConfiguration"         : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                             : "Dynamics365CustomerEngagementPackageConfiguration",
              "baseLicenceModel"                         : "baseLicenceModel",
              "requireS2SOutboundAndCrmSecureStoreAccess": "true",
              "applicationConfigurationUri"              : "applicationConfigurationUri",
              "packageLocationUri"                       : "packageLocationUri",
              "packageRegionAvailabilities"              : [
                {
                  "region"                     : "region",
                  "isAvailable"                : "true",
                  "applicationConfigurationUri": "applicationConfigurationUri"
                }
              ],
              "multiplePackagesInPackageFile"            : "false",
              "ID"                                       : "string",
              "@odata.etag"                              : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365OperationsPackageConfiguration"                 : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"      : "Dynamics365OperationsPackageConfiguration",
              "releaseVersion"    : "releaseVersion",
              "solutionIdentifier": "solutionIdentifier",
              "ID"                : "string",
              "@odata.etag"       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365BusinessCentralTestDrivePackageConfiguration"   : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                      : "Dynamics365BusinessCentralTestDrivePackageConfiguration",
              "azureActiveDirectoryTenantName"    : "string",
              "maxConcurrentTestDrives"           : "1",
              "instanceUri"                       : "string",
              "roleName"                          : "string",
              "azureActiveDirectoryApplicationID" : "string",
              "azureActiveDirectoryApplicationKey": "string",
              "azureActiveDirectoryTenantID"      : "string",
              "testDriveDuration"                 : "1",
              "ID"                                : "string",
              "@odata.etag"                       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365CustomerEngagementTestDrivePackageConfiguration": {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                      : "Dynamics365CustomerEngagementTestDrivePackageConfiguration",
              "azureActiveDirectoryTenantName"    : "string",
              "maxConcurrentTestDrives"           : "1",
              "instanceUri"                       : "string",
              "roleName"                          : "string",
              "instanceWebApiUri"                 : "string",
              "azureActiveDirectoryApplicationID" : "string",
              "azureActiveDirectoryApplicationKey": "string",
              "azureActiveDirectoryTenantID"      : "string",
              "testDriveDuration"                 : "1",
              "ID"                                : "string",
              "@odata.etag"                       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_Dynamics365OperationsTestDrivePackageConfiguration"        : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                      : "Dynamics365OperationsTestDrivePackageConfiguration",
              "azureActiveDirectoryTenantName"    : "string",
              "maxConcurrentTestDrives"           : "1",
              "instanceUri"                       : "string",
              "roleName"                          : "string",
              "trialLegalEntity"                  : "string",
              "azureActiveDirectoryApplicationID" : "string",
              "azureActiveDirectoryApplicationKey": "string",
              "azureActiveDirectoryTenantID"      : "string",
              "testDriveDuration"                 : "1",
              "ID"                                : "string",
              "@odata.etag"                       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_AzureApplicationPackageConfiguration"                      : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                     : "AzureApplicationPackageConfiguration",
              "azureActiveDirectoryTenantID"     : "string",
              "azureActiveDirectoryApplicationID": "string",
              "ID"                               : "string",
              "@odata.etag"                      : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_AzureManagedApplicationPackageConfiguration"               : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                 : "AzureManagedApplicationPackageConfiguration",
              "version"                      : "string",
              "allowJitAccess"               : "true",
              "canEnableCustomerActions"     : "true",
              "allowedCustomerActions"       : [
                "string"
              ],
              "publicAzureTenantID"          : "string",
              "publicAzureAuthorizations"    : [
                {
                  "principalID"     : "string",
                  "roleDefinitionID": "string"
                }
              ],
              "azureGovernmentTenantID"      : "string",
              "azureGovernmentAuthorizations": [
                {
                  "principalID"     : "string",
                  "roleDefinitionID": "string"
                }
              ],
              "policies"                     : [
                {
                  "policyName"        : "string",
                  "policyDefinitionID": "string",
                  "policyParameters"  : "string",
                  "policySku"         : "string"
                }
              ],
              "packageReferences"            : [
                {
                  "type" : "AzureApplicationPackage",
                  "value": "packageID"
                }
              ],
              "ID"                           : "string",
              "@odata.etag"                  : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_AzureSolutionTemplatePackageConfiguration"                 : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"     : "AzureSolutionTemplatePackageConfiguration",
              "version"          : "string",
              "packageReferences": [
                {
                  "type" : "AzureApplicationPackage",
                  "value": "packageID"
                }
              ],
              "ID"               : "string",
              "@odata.etag"      : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Packages.BasePackageConfiguration_AzureResourceManagerTestDrivePackageConfigurationn"        : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"                      : "AzureResourceManagerTestDrivePackageConfiguration",
              "regions"                           : [
                "string"
              ],
              "hotInstances"                      : "1",
              "warmInstances"                     : "1",
              "coldInstances"                     : "1",
              "azureSubscriptionID"               : "string",
              "azureActiveDirectoryApplicationID" : "string",
              "azureActiveDirectoryApplicationKey": "string",
              "azureActiveDirectoryTenantID"      : "string",
              "testDriveDuration"                 : "1",
              "ID"                                : "string",
              "@odata.etag"                       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Variants.AzureSkuVariant"                                                                                                                          : {
        "value": {
          "resourceType"      : "AzureSkuVariant",
          "state"             : "Active",
          "friedlyName"       : "string",
          "conversionPaths"   : "string",
          "leadGenID"         : "string",
          "externalID"        : "string",
          "extendedProperties": [
            {
              "type" : "string",
              "value": "string"
            }
          ],
          "ID"                : "string",
          "@odata.etag"       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Variants.AzureTestDriveVariant"                                                                                                                    : {
        "value": {
          "resourceType"      : "AzureTestDriveVariant",
          "testDriveType"     : "string",
          "state"             : "Active",
          "extendedProperties": [
            {
              "type" : "string",
              "value": "string"
            }
          ],
          "ID"                : "string",
          "@odata.etag"       : "string"
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_AzureTestDriveVariant"                                                  : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"      : "AzureTestDriveVariant",
              "testDriveType"     : "string",
              "state"             : "Active",
              "extendedProperties": [
                {
                  "type" : "string",
                  "value": "string"
                }
              ],
              "ID"                : "string",
              "@odata.etag"       : "string"
            }
          ]
        }
      },
      "Microsoft.Ingestion.Api.Models.Common.PagedCollection_Microsoft.Ingestion.Api.Models.Variants.BaseVariant_AzureSkuVariant"                                                        : {
        "value": {
          "@odata.nextLink": "string",
          "value"          : [
            {
              "resourceType"      : "AzureSkuVariant",
              "state"             : "Active",
              "friedlyName"       : "string",
              "conversionPaths"   : "string",
              "leadGenID"         : "string",
              "externalID"        : "string",
              "extendedProperties": [
                {
                  "type" : "string",
                  "value": "string"
                }
              ],
              "ID"                : "string",
              "@odata.etag"       : "string"
            }
          ]
        }
      }
    },
    "headers"   : {
      "Request-ID": {
        "description": "ID of request generated by service",
        "schema"     : {
          "type": "string"
        }
      }
    }
  },
  "x-ms-export-notes": [
    "The exported API contains schemas that aren't of content type 'application/vnd.oai.openapi.components+json', and are hence not exported as OpenAPI components."
  ]
}
